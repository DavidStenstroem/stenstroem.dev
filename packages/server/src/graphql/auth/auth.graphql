input RegisterInput {
  email: EmailAddress!
  name: String!
  password: String!
}

input InviteInput {
  email: EmailAddress!
}

input LoginInput {
  email: EmailAddress!
  password: String
}

type Invitation {
  id: ID!
  email: EmailAddress!
  accepted: Boolean!
  createdAt: DateTime!
  name: String
}

type AuthPayload {
  errors: [FormError!]
  account: Account
}

type Mutation {
  register(input: RegisterInput!): AuthPayload!
  invite(input: InviteInput!): [FormError!]
  login(input: LoginInput!): AuthPayload!
  logout: Boolean!
}

type Query {
  getInvite(id: String!): EmailAddress
  getInvites(from: String!): [Invitation!]
}
